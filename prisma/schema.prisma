// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  DIRECTOR
  EMPLOYEE
  USER
}

enum PersonType {
  NULL
  INTERNAL
  EXTERNAL
}

enum InternalType {
  NULL
  LECTURER
  STUDENT
  STAFF
}

enum ExternalType {
  NULL
  GOVERNMENT
  PRIVATE
}

model User {
  id               Int           @id @unique @default(autoincrement())
  usr              String        @default(dbgenerated("CONCAT('usr', LPAD(FLOOR(RAND() * 10000000000), 7, '0'))"))
  name             String        @db.VarChar(50)
  email            String?       @unique
  avatar           String?
  password         String
  active           Boolean       @default(true)
  lineId           String?       @unique @db.VarChar(33)
  googleId           String?       @unique @db.VarChar(33)
  role             UserRole      @default(USER)
  pname            String?       @db.VarChar(20)
  fname            String?       @unique @db.VarChar(50)
  sex              String?       @db.VarChar(5)
  position         String?       @db.VarChar(50)
  person           String?       @db.VarChar(50)
  phone            String?       @db.Char(10)
  fax              String?       @db.Char(9)
  type             PersonType?
  organizationName String?
  internalType     InternalType?
  externalType     ExternalType?
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  Cart             Carts[]
}

model Rooms {
  id        Int      @id @default(autoincrement())
  room      String   @default(dbgenerated("CONCAT('room', LPAD(FLOOR(RAND() * 10000000000), 7, '0'))"))
  name      String   @unique @db.VarChar(50)
  details   String   @db.VarChar(255)
  no        String   @db.VarChar(4)
  building  String   @db.VarChar(255)
  location  String   @db.Text
  roomimage String   @db.Text
  active    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Cart      Carts[]
  // check       check_statusRoom[]
}

enum PriceType {
  NULL
  SAMPLE
  HOUR
  DAY
  RATES
}

model Tools {
  id        Int        @id @default(autoincrement())
  tool      String     @default(dbgenerated("CONCAT('tool', LPAD(FLOOR(RAND() * 10000000000), 7, '0'))"))
  num       String     @unique @db.Char(6)
  name      String     @db.VarChar(50)
  band      String     @db.VarChar(50)
  number    Int
  balance   Int?
  toolimage String     @db.Text
  toolrate  PriceType?
  internal  Int?
  external  Int?
  rate      String?    @db.VarChar(50)
  details   String?    @db.VarChar(255)
  breakdown Int?
  repair    Int?
  lost      Int?
  active    Boolean    @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Cart      Carts[]

  @@unique([name, band])
}

model Carts {
  id     Int    @id @default(autoincrement())
  roomId Int?
  Room   Rooms? @relation(fields: [roomId], references: [id], onDelete: Cascade)
  toolId Int?
  Tool   Tools? @relation(fields: [toolId], references: [id], onDelete: Cascade)
  userId Int
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([roomId])
  @@index([toolId])
  @@index([userId])
}
